{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../generalservice.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n    }\n    canActivate(route, state) {\n      var _a;\n      const userData = this.service.getLoginData();\n      if (!userData) {\n        this.router.navigate(['/login']);\n        return false;\n      }\n      // Get the current route path and check permissions based on the user's role\n      const routePath = ((_a = route.routeConfig) === null || _a === void 0 ? void 0 : _a.path) || '';\n      if (this.isUserAllowed(userData.role, routePath)) {\n        return true;\n      } else {\n        this.router.navigate(['/dashboard']);\n        return false;\n      }\n    }\n    isUserAllowed(userRole, routePath) {\n      const allowedRoles = this.service.getAllowedRoles(routePath);\n      return allowedRoles.includes(userRole);\n    }\n  }\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.GeneralserviceService), i0.ɵɵinject(i2.Router));\n  };\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}