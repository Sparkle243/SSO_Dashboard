{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction HomeComponent_tr_24_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_tr_24_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Age must be a positive number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_tr_24_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 13);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"input\", 14);\n    i0.ɵɵtemplate(5, HomeComponent_tr_24_div_5_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelement(7, \"input\", 16);\n    i0.ɵɵtemplate(8, HomeComponent_tr_24_div_8_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"input\", 17);\n    i0.ɵɵtemplate(11, HomeComponent_tr_24_div_11_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 18);\n    i0.ɵɵelementStart(13, \"i\", 19);\n    i0.ɵɵlistener(\"click\", function HomeComponent_tr_24_Template_i_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const i_r2 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.removeRow(i_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = row_r1.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = row_r1.get(\"name\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = row_r1.get(\"age\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = row_r1.get(\"age\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = row_r1.get(\"email\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = row_r1.get(\"email\")) == null ? null : tmp_4_0.touched));\n  }\n}\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(fb) {\n      this.fb = fb;\n    }\n    ngOnInit() {\n      // Initialize form with FormArray for table rows\n      this.tableForm = this.fb.group({\n        rows: this.fb.array([])\n      });\n      this.addRow(); // Adds a default empty row on load\n    }\n    // Getter for the rows FormArray\n    get rows() {\n      return this.tableForm.get('rows');\n    }\n    // Add a new row to the FormArray\n    addRow() {\n      if (this.tableForm.invalid) {\n        alert('Please fill all required fields before adding a new row!');\n        return; // Prevent adding a new row\n      }\n      const newRow = this.fb.group({\n        id: [this.rows.length + 1],\n        name: ['', Validators.required],\n        age: [null, [Validators.required, Validators.min(0)]],\n        email: ['', [Validators.required, Validators.email]] // Email validation\n      });\n      this.rows.push(newRow); // Add the new row to FormArray\n      console.log(\"this.rows\", this.rows);\n    }\n    // Remove a row from the FormArray\n    removeRow(index) {\n      this.rows.removeAt(index);\n    }\n    // Save the form (you can send this to a backend or handle locally)\n    saveForm() {\n      console.log('Form Data:', this.tableForm.value);\n      if (this.tableForm.valid) {\n        // Handle form submission (e.g., send to backend)\n        alert('Form saved successfully!');\n      } else {\n        alert('Form is invalid!');\n      }\n    }\n  }\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 28,\n    vars: 2,\n    consts: [[1, \"section\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"container\", \"mt-4\"], [1, \"float-right\", \"p-1\"], [\"type\", \"button\", 1, \"btn\", \"btn-md\", \"btn-raised\", \"btnAddNewRow\", 3, \"click\"], [3, \"formGroup\"], [1, \"table\", \"table-bordered\"], [\"formArrayName\", \"rows\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"float-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"mt-3\", 3, \"click\"], [3, \"formGroupName\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter Name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"number\", \"formControlName\", \"age\", \"placeholder\", \"Enter Age\", 1, \"form-control\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-control\"], [1, \"text-center\"], [1, \"fas\", \"fa-trash\", \"text-danger\", 3, \"click\"], [1, \"text-danger\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3, \" Home \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_7_listener() {\n          return ctx.addRow();\n        });\n        i0.ɵɵtext(8, \"Add New Row\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", 7);\n        i0.ɵɵelementStart(10, \"table\", 8);\n        i0.ɵɵelementStart(11, \"thead\");\n        i0.ɵɵelementStart(12, \"tr\");\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"th\");\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"th\");\n        i0.ɵɵtext(18, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"th\");\n        i0.ɵɵtext(20, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"th\");\n        i0.ɵɵtext(22, \"Actions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"tbody\", 9);\n        i0.ɵɵtemplate(24, HomeComponent_tr_24_Template, 14, 5, \"tr\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 11);\n        i0.ɵɵelementStart(26, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_26_listener() {\n          return ctx.saveForm();\n        });\n        i0.ɵɵtext(27, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.tableForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rows.controls);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormArrayName, i2.NgForOf, i1.FormGroupName, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i2.NgIf, i1.NumberValueAccessor],\n    styles: [\"\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}